---
# tasks file for aws-deploy
# Basic provisioning example
- amazon.aws.ec2:
    key_name: "{{ key }}"
    instance_type: "{{ size }}"
    image: "{{ image }}"
    aws_access_key:  "{{ lookup('env','AWS_ACCESS_KEY_ID') }}" 
    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}" 
    region: "{{ region }}"
    group: "{{ group }}"
    wait: yes
    instance_tags:
      Name:  "{{hostvars[item].inventory_hostname}}"
    #group: webserver
    #count: 3
    #vpc_subnet_id: subnet-29e63245
    #assign_public_ip: yes
  with_inventory_hostnames:
    - master
    - worker
  register: instance_info


- name: Wait for port 22 to become open on the host, don't start checking for 30 seconds
  wait_for:
    host: "{{ item.instances[0].public_ip }}"
    port: 22
    delay: 30
    timeout: 300
  loop: "{{ instance_info.results }}"

- name: Add host to group 'master'
  add_host:
    name: '{{ item.instances[0].tags.Name }}'
    ansible_ssh_host: '{{ item.instances[0].public_ip }}'
    groups: master
  when: item.instances[0].tags.Name.find("master") != -1
  loop: "{{ instance_info.results }}"
- name: Add host to group 'worker'
  add_host:
    name: '{{ item.instances[0].tags.Name }}'
    ansible_ssh_host: '{{ item.instances[0].public_ip }}'
    groups: worker
  when: item.instances[0].tags.Name.find("master") == -1
  loop: "{{ instance_info.results }}"

- name: debug
  debug:
    msg: "hostname is {{ item.instances[0].tags.Name }} and public ip is {{ item.instances[0].public_ip }}"
  loop: "{{ instance_info.results }}"
